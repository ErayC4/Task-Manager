<style>
  .workspace{
    display: grid;
    grid-template-columns: 1fr 4fr 1fr;
    width: 100%; 
    gap: 64px;
    margin-top: 32px;
  }
  .task {
    height: 40px;
    padding-left: 16px;
    box-shadow: 0px -3px 3px rgba(0, 0, 0, 0.2);
    display: flex;             
    align-items: center;       
    justify-content: flex-start;
    cursor: pointer;
    transition: transform 0.3s ease;
}

  .task:hover {
    transform: scaleX(1.1);  /* Vergrößerung um 10% */
  }
  .editor-js{
    box-shadow: 0 0px 12px rgba(0, 0, 0, 0.2);
    border-radius: 12px;
    border: none;
    padding: 16px 96px;
    margin-bottom: 200px;
    height: 800px;
    transition: opacity 0.3s ease, transform 0.3s ease;
    opacity: 0;
    transform: scale(0.9);
  }
  .editor-js[style="display: block;"] {
    opacity: 1;
    transform: scale(1);
}

  .table-of-contents-item{
    border-bottom: solid 1px #ccc;
    display: flex;
    align-items: center;
    height: 28px;
  }
  .table-of-contents{ 
    box-shadow: 0px 12px 12px rgba(0, 0, 0, 0.2);
  }
  .table-of-contents-header{
    background-color: #FDE1AC;
    padding-bottom: 8px;
    padding-top: 8px;
    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.2);

  }
  .table-of-contents-input-field{
    background-color: transparent;
    border:none;
    height: 24px;
  }
  .table-of-contents-search-bar{
    display:flex;
    border:none;
    align-items: center;
    padding-left: 8px;
    border-radius: 4px;
    background-color: #FDE1AC;
    filter: brightness(90%);
    margin: 0 8px;
    gap: 4px;
  }

</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const taskElements = document.querySelectorAll('.task'); // Tasks auswählen
    const editorElements = document.querySelectorAll('.editor-js'); // Editor-Divs auswählen

    // Funktion zum Abrufen der kleinsten ID
    function getSmallestTaskId() {
        const ids = Array.from(taskElements).map(task => parseInt(task.id, 10));
        return Math.min(...ids); // Kleinste ID berechnen
    }

    // Standardmäßig aktives Element initialisieren
    function initializeDefault() {
        const smallestId = getSmallestTaskId(); // Kleinste ID ermitteln

        // Alle `editor-js`-Elemente ausblenden
        editorElements.forEach(editor => editor.style.display = 'none');

        // Editor-Div mit der kleinsten ID anzeigen
        const defaultEditor = document.querySelector(`#editorjs-${smallestId}`);
        if (defaultEditor) defaultEditor.style.display = 'block';
    }

    // Event-Listener für Task-Elemente
    taskElements.forEach(function(taskElement) {
        taskElement.addEventListener('click', function() {
            const clickedId = this.id; // ID des geklickten Tasks ermitteln

            // Alle Editor-Divs ausblenden
            editorElements.forEach(function(editorElement) {
                editorElement.style.display = 'none';
            });

            // Editor-Div für die geklickte Task-ID anzeigen
            const activeEditor = document.querySelector(`#editorjs-${clickedId}`);
            if (activeEditor) {
                activeEditor.style.display = 'block';
            }
        });
    });

    // Standardmäßige Initialisierung
    initializeDefault();
});

</script>
<%= javascript_include_tag "editor_controller" %>

<script src="https://cdn.jsdelivr.net/npm/@editorjs/editorjs@2.28.2"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/header@2.8.1"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/list@1.9.0"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/code@2.9.0"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/paragraph@2.11.3"></script>



<div class="workspace">
  <div class="tasks-container">
    <% @tasks.each do |task| %>
      <p class="task" id="<%= task.id %>"style="background-color: <%= task.color %>"><%= task.title %><p>
    <% end %>
  </div>
  
    <div class="text-editor">
      
      <% @tasks.each do |task| %>
        <div id="editorjs-<%= task.id %>" class="editor-js" data-task-id="<%= task.id %>" style="display: none;"></div>      
      <% end %>
    </div>

    <div>
      <div class="table-of-contents-header">
        <p style="padding-left: 8px; padding-bottom: 4px;">TaskName</p>
        <div class="table-of-contents-search-bar">
          
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
          </svg>
          <input class="table-of-contents-input-field" type="text" placeholder="Suche in Task...">
        </div>
      </div>
      <div class="table-of-contents">
        
        <% @tasks.each do |task| %>
          <% if task.content.present? %>
            <% parsed_content = JSON.parse(task.content) %>
            <% parsed_content['blocks'].each do |block| %>
              <% if block['type'] == 'header' %>
                <div class="table-of-contents-item">
                  <p class="topic"><%= block['data']['text'] %></p>
                </div>
              <% end %>
            <% end %>
          <% end %>
        <% end %>




      </div>
    </div>
</div>
