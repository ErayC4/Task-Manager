<style>
  .workspace{
    display: grid;
    grid-template-columns: 1fr 4fr 1fr;
    width: 100%; 
    gap: 64px;
    margin-top: 32px;
  }
  .task {
    height: 40px;
    padding-left: 16px;
    box-shadow: 0px -3px 3px rgba(0, 0, 0, 0.2);
    display: flex;             
    align-items: center;       
    justify-content: flex-start;
    cursor: pointer;
    transition: transform 0.3s ease;
}

  .task:hover {
    transform: scaleX(1.1);  /* Vergrößerung um 10% */
  }
  .editor-js{
    box-shadow: 0 0px 12px rgba(0, 0, 0, 0.2);
    border-radius: 12px;
    border: none;
    padding: 16px 96px;
    margin-bottom: 200px;
  }
  
  .table-of-contents{
    filter: brightness(110%);
  }
  .table-of-contents-item{
    display: flex;
    align-items: center;
    height: 40px;
    padding-left: 4px;
  }
  
  .table-of-contents-header{
    padding-bottom: 8px;
    padding-top: 8px;
    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.2);

  }
  .table-of-contents-input-field{
    background-color: transparent;
    border:none;
    height: 24px;
  }
  .table-of-contents-search-bar{
    display:flex;
    border:none;
    align-items: center;
    padding-left: 8px;
    border-radius: 4px;
    background-color: #f5f5f5;
    margin: 0 8px;
    gap: 4px;
  }

</style>


<%= javascript_include_tag "editor_controller" %>

<script src="https://cdn.jsdelivr.net/npm/@editorjs/editorjs@2.28.2"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/header@2.8.1"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/list@1.9.0"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/code@2.9.0"></script>
<script src="https://cdn.jsdelivr.net/npm/@editorjs/paragraph@2.11.3"></script>

<script>
document.addEventListener("DOMContentLoaded", () => {
    let selectedTask = null;

    const tasks = document.querySelectorAll(".task");
    tasks.forEach(task => {
        task.addEventListener("click", (event) => {
            const clickedTaskId = event.target.id;

            // 1. Task skalieren und alte Skalierung entfernen
            if (selectedTask) {
                selectedTask.style.transform = "scaleX(1)";
            }
            selectedTask = event.target;
            selectedTask.style.transform = "scaleX(1.1)";
            const taskTitle = event.target.textContent.trim();
            displayTaskName(taskTitle);
            // 2. Editor für den aktuellen Task anzeigen
            showEditorForTask(clickedTaskId);

            // 3. Table of Contents für den aktuellen Task aktualisieren
            showTableOfContentsForTask(clickedTaskId);
        });
    });

    function showEditorForTask(taskId) {
        const editors = document.querySelectorAll(".editor-js");
        editors.forEach(editor => {
            editor.style.display = "none";
        });

        const editorToShow = document.getElementById(`editorjs-${taskId}`);
        if (editorToShow) {
            editorToShow.style.display = "block";
        }
    }

    function displayTaskName(taskTitle) {
        // Finde das Element, wo der Titel angezeigt werden soll
        const taskNameElement = document.querySelector(".table-of-contents-header p");
        if (taskNameElement) {
            taskNameElement.textContent = taskTitle;
        }
    }

    function showTableOfContentsForTask(taskId) {
        const tables = document.querySelectorAll(".table-of-contents");
        tables.forEach(table => {
            if (table.getAttribute("data-task-id") === taskId) {
                table.style.display = "block";
            } else {
                table.style.display = "none";
            }
        });
    }

    function selectDefaultTask() {
        let smallestIdTask = null;
        let smallestId = Infinity;

        tasks.forEach(task => {
            const taskId = parseInt(task.id, 10);
            if (taskId < smallestId) {
                smallestId = taskId;
                smallestIdTask = task;
            }
        });

        if (smallestIdTask) {
            smallestIdTask.click(); // Simuliere einen Klick auf den Task
        }
    }

    // Initialisieren
    const editors = document.querySelectorAll(".editor-js");
    editors.forEach(editor => {
        editor.style.display = "none";
    });

    const tables = document.querySelectorAll(".table-of-contents");
    tables.forEach(table => {
        table.style.display = "none";
    });

    selectDefaultTask(); // Default-Task auswählen
});

</script>

<div class="workspace">
  <div class="tasks-container">
    <div class="tasks-container">
      <% @tasks.uniq { |task| task.title }.each do |task| %>
        <p class="task" id="<%= task.id %>" style="background-color: <%= task.color %>"><%= task.title %></p>
      <% end %>
    </div>
  </div>
  
    <div class="text-editor">
      
      <% @tasks.each do |task| %>
        <div 
            id="editorjs-<%= task.id %>" 
            class="editor-js" 
            data-task-id="<%= task.id %>" 
            data-initial-content="<%= task.content.present? ? h(task.content) : '' %>" 
            >
          </div>      
      <% end %>
    </div>

    <div>
      <div class="table-of-contents-header">
        <p style="padding-left: 8px; padding-bottom: 4px;">TaskName</p>
        <div class="table-of-contents-search-bar">
          
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
          </svg>
          <input class="table-of-contents-input-field" type="text" placeholder="Suche in Task...">
        </div>
      </div>
        <% @tasks.each do |task| %>
        <div 
          class="table-of-contents" 
          style="display: none;" 
          data-task-id="<%= task.id %>">
          <% if task.content.present? %>
            <% parsed_content = JSON.parse(task.content) %>
            <% parsed_content['blocks'].each do |block| %>
              <% if block['type'] == 'header' && block['data']['level'] == 2 %>
                <p class="table-of-contents-item"><%= block['data']['text'] %></p>
              <% end %>
            <% end %>
          <% end %>
        </div>
      <% end %>

    </div>
</div>
